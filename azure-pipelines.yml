variables:
  # Update build ID if we are working on a feature branch
  ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
    BranchName: ''
    Separator: ''
    Revision: $[counter('TYDBuildNumber', 1)]
    isWebsiteBranchMaster: true
  ${{ if ne(variables['Build.SourceBranchName'], 'master') }}:
    BranchName: ${{ variables['Build.SourceBranchName'] }}
    Separator: '.'
    Revision: $[counter(variables['Build.SourceBranchName'], 1)]
    isWebsiteBranchMaster: false
  artifact_name: StaticWebsite

name: $(BranchName)$(Separator)$(Revision)

stages:
- stage: Build
  variables:
    # Deploy to Production if:
    # 1. Website has a new change on Master
    deployToProduction: $[ eq(variables['isWebsiteBranchMaster'], true) ]
  jobs:
  - job: Build
    pool:
      vmImage: 'ubuntu-18.04'
    steps:
    - template: .azure-pipelines/npm-restore.yml
    - template: .azure-pipelines/npm-build.yml
    - template: .azure-pipelines/add-robots.yml
    - template: .azure-pipelines/publish-artifact.yml

- stage: Deploy
  dependsOn: Build
  variables:
    # Deploy to Production if:
    # 1. Website has a new change on Master
    deployToProduction: $[ eq(variables['isWebsiteBranchMaster'], true) ]
  jobs:
  - job: DeployStage
    condition: and(succeeded(), eq(variables['deployToProduction'], 'False'))
    pool:
      vmImage: 'windows-2019'
    steps:
    - template: .azure-pipelines/download-artifact.yml
    - template: .azure-pipelines/deploy-to-azure.yml

  - job: DeployProduction
    condition: and(succeeded(), eq(variables['deployToProduction'], 'True'))
    pool:
      vmImage: 'windows-2019'
    steps:
      - powershell: |
          echo "TODO Deploy PRODUCTION Site..."
